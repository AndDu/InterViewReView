1.http请求描述：
    先是域名解析,TCP三次握手，建立TCP连接后发起HTTP请求，服务器响应HTTP请求，客户端处理服务器回复，最后四次挥手告别服务器。

    （1） a.域名解析：Chrome会搜索操作系统自身的DNS缓存（可以在命令行下使用 ipconfig /displaydns 查看）。如果找到且没有过期则成功，
         b.如果a未找到，那么尝试读取位于C:\Windows\System32\drivers\etc下的hosts文件，如果找到对应的IP地址则解析成功，
         c.如果b未找到，浏览器首先会找TCP/IP参数中设置的本地DNS服务器，并请求LDNS服务器来解析这个域名，这个一般是离你最近的DNS服务器
         d.如果还没找到IP,否则就请求根DNS服务器了。

    （2）三次握手
        a.首先由Client发出请求连接即 SYN=1 ACK=0，TCP规定SYN=1时不能携带数据，但要消耗一个序号，因此声明自己的序号是 seq=x。
        b.然后 Server 进行回复确认，即 SYN=1 ACK=1 seq=y，ack=x+1。
        c.再然后 Client 再进行一次确认，但不用SYN 了，这时即为 ACK=1，seq=x+1， ack=y+1。

    （3）四次挥手：
        a.服务器接收完之后发送FIN=1告诉服务器,进入FIN_WAIT状态，
        b.服务器接收后回复接收到FIN=1的确认给客户端。
        c.服务器发发送完毕后也发送Fin=1告诉客户端发送完毕，请求释放连接。
        d.客户端收到后恢复确认，又进入FIN_WAIT状态，服务器收到后关闭连接。（最后这里客户端进入等待是怕c发过来的ACK丢失）

        注意：
            a.FIN_WAIT状态时候一般是方法设置的，就是平时设置的TIMEOUT时间
            b.如果客户端中途断了，另外一方在TIMEOUT时间到了之后会进行判断是否释放连接。
            c.为什么连接的时候是三次握手，关闭的时候却是四次挥手？
                答：
                  关闭连接时，当Server端收到FIN报文时，很可能数据信息没有传完并不会立即关闭连接，
                  所以只能先回复一个ACK报文（告诉Client端，"你发的FIN报文我收到了"）
                  。只有等到Server端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送。故需要四步挥手。

        https://blog.csdn.net/seu_calvin/article/details/52966804

    (4)HTTP请求格式：
        <request-line>      请求行:由请求方法（get/post/delete/put/head），URI路径，http版本号
        <general-headers>
        <request-headers>   请求头:缓存相关信息（Cache-Control，If-Modified-Since）、客户端身份信息（User-Agent）、是否支持gzip压缩，等键值对信息。
        <entity-headers>
        <empty-line>        空  行:
        [<message-body>]    消息体:客户端发送给服务器的数据（并不是每个请求都必须的）

        常用的GET、POST、PUT、DELETE四种请求方式中：

        （1）关于GET和DELETE将要处理的资源信息直接放在了URL中。通过"?<键值对>&<键值对>“的形式追加。HTTP RFC规范中并没有规定GET请求的URL长度，只是说明如果server无法处理太长的URI，可以通过返回414状态码。但是大多数浏览器会讲其限制在2k-8k之间。

        （2）关于POST和PUT的请求参数存储在报文的主体中。每一个参数都以”--boundary值“+"属性信息"+”空行“+"参数值"的数据结构存储。请求数据的最后以”--boundary值--“的格式结尾。

         https://blog.csdn.net/seu_calvin/article/details/53304406

    (5)HTTP响应格式：
        <status-line>       状态行：http版本号,状态码和状态描述
        <general-headers>
        <response-headers>  响应头：返回数据的响应信息，例如数据的长度等键值对
        <entity-headers>
        <empty-line>
        [<message-body>]    响应体：请求返回的数据。